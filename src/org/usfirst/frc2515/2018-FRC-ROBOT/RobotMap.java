// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2515.2018-FRC-ROBOT;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.drive.MecanumDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveRightRear;
    public static SpeedController driveLeftRear;
    public static SpeedController driveRightFront;
    public static SpeedController driveLeftFront;
    public static MecanumDrive driveMecanumDrive1;
    public static Compressor pnuematicsCompressor1;
    public static Solenoid pnuematicsLiftSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveRightRear = new Spark(3);
        LiveWindow.addActuator("Drive", "Right Rear", (Spark) driveRightRear);
        driveRightRear.setInverted(false);
        driveLeftRear = new Spark(2);
        LiveWindow.addActuator("Drive", "Left Rear", (Spark) driveLeftRear);
        driveLeftRear.setInverted(false);
        driveRightFront = new Spark(1);
        LiveWindow.addActuator("Drive", "Right Front", (Spark) driveRightFront);
        driveRightFront.setInverted(false);
        driveLeftFront = new Spark(0);
        LiveWindow.addActuator("Drive", "Left Front", (Spark) driveLeftFront);
        driveLeftFront.setInverted(false);
        driveMecanumDrive1 = new MecanumDrive(driveLeftFront, driveLeftRear,
              driveRightFront, driveRightRear);
        LiveWindow.addActuator("Drive", "Mecanum Drive 1", driveMecanumDrive1);
        driveMecanumDrive1.setSafetyEnabled(true);
        driveMecanumDrive1.setExpiration(0.1);
        driveMecanumDrive1.setMaxOutput(1.0);

        pnuematicsCompressor1 = new Compressor(0);
        LiveWindow.addActuator("Pnuematics", "Compressor 1", pnuematicsCompressor1);
        
        pnuematicsLiftSolenoid = new Solenoid(0, 0);
        LiveWindow.addActuator("Pnuematics", "Lift Solenoid", pnuematicsLiftSolenoid);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
